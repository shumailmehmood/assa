{"version":3,"file":"static/js/422.5d83e87e.chunk.js","mappings":"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","sources":["components/Paginator.tsx","components/home/Card.tsx","views/home/App.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Stack from '@mui/material/Stack';\r\n\r\ntype Props = {\r\n    count: number,\r\n    onChangeHandler: (event: React.ChangeEvent<unknown>, page: number) => void\r\n}\r\nconst Paginating: React.FC<Props> = ({ count, onChangeHandler }): React.ReactElement => {\r\n    const margin = {\r\n        margin: \"30px\",\r\n        fontWeight: \"bold\",\r\n    }\r\n    return (\r\n        <Stack spacing={2}>\r\n            <Pagination count={count} onChange={onChangeHandler} style={margin} />\r\n        </Stack>\r\n    );\r\n}\r\n\r\nexport default Paginating","import { ReactElement } from \"react\";\r\nimport \"../../assets/css/home/App.scss\";\r\nimport * as React from 'react';\r\n\r\n\r\nconst Card: React.FC<any> = ({ data }): ReactElement => {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"card\">\r\n        <div className=\"card-content\"> {data.name}</div>\r\n        <div className=\"card-item\">\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td className=\"left-td\">Type</td>\r\n                <td></td>\r\n                <td className=\"right-td\"> <span>:</span> {data.type}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left-td\">Dimension</td>\r\n                <td></td>\r\n                <td className=\"right-td\"> <span className=\"colon\">:</span>{data.dimension}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left-td\">Resident count</td>\r\n                <td></td>\r\n                <td className=\"right-td\"> <span>:</span> {data.residents.length}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { ReactElement, useState } from \"react\";\r\nimport Card from \"../../components/home/Card\";\r\nimport \"../../assets/css/home/App.scss\";\r\nimport Paginating from \"../../components/Paginator\";\r\nimport { useGetLocationsQuery } from \"../../store/services/locations\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Home: React.FC = (): ReactElement => {\r\n  const [currentPage, setCurrentPage] = useState<any>(1);\r\n  const navigate = useNavigate();\r\n  const {\r\n    data: locations,\r\n    isLoading,\r\n    // isSuccess,\r\n    // isError,\r\n    // error,\r\n  } = useGetLocationsQuery(currentPage);\r\n\r\n  function onChangeHandler(\r\n    event: React.ChangeEvent<unknown>,\r\n    page: number\r\n  ): void {\r\n    setCurrentPage(page);\r\n  }\r\n\r\n  function onRouteChange(id: number): void {\r\n    navigate(`/location?id=${id}`);\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"card-section\">\r\n        {new Array(20).fill(0).map((e, i) => (\r\n          <Skeleton key={i} variant=\"rectangular\" width={420} height={130} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <section className=\"card-section\">\r\n        <div className=\"cards\">\r\n          {locations &&\r\n            locations.results.map((row: any) => (\r\n              <div className=\"card-align\" key={row.id} onClick={() => onRouteChange(row.id)}>\r\n                <Card data={row} />\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className=\"pagination\">\r\n          {locations && (\r\n            <Paginating\r\n              count={Math.ceil(locations.info.count / 20)}\r\n              onChangeHandler={onChangeHandler}\r\n            />\r\n          )}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["_ref","count","onChangeHandler","_jsx","Stack","spacing","children","Pagination","onChange","style","margin","fontWeight","data","className","_jsxs","name","type","dimension","residents","length","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","navigate","useNavigate","_useGetLocationsQuery","useGetLocationsQuery","locations","isLoading","Array","fill","map","e","i","Skeleton","variant","width","height","_Fragment","results","row","onClick","id","concat","Card","Paginating","Math","ceil","info","event","page"],"sourceRoot":""}