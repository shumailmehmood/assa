{"version":3,"file":"static/js/787.17eee19f.chunk.js","mappings":"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","sources":["components/Imagecard.tsx","components/detail/Detailcard.tsx","views/detail/Detail.tsx"],"sourcesContent":["import { ReactElement } from \"react\";\r\nimport * as React from 'react';\r\nimport \"../assets/css/location/Location.scss\";\r\nimport { ImageCard } from \"../types/types\";\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\ntype Props = {\r\n    data: ImageCard\r\n}\r\nconst statusCircleColor: any = {\r\n    Dead: 'dead-circle',\r\n    Alive: 'alive-circle',\r\n    unknown: 'unknown-circle'\r\n}\r\n\r\nconst ImageCardComponent: React.FC<Props> = ({ data }): ReactElement => {\r\n    const navigate = useNavigate()\r\n    const navigatePage = () => {\r\n        navigate(`/detail?id=${data.id}`)\r\n    }\r\n    return <>\r\n        <div className=\"main-imagecard\" key={data.id}  >\r\n            <div className=\"image\">\r\n                <img src={data.image} alt={data.name} />\r\n            </div>\r\n            <div className=\"imagecard-content\">\r\n                <div className=\"heading\" >\r\n                    <span onClick={navigatePage}> {data.name}</span>\r\n                </div>\r\n                <div className=\"dot-text\">\r\n\r\n                    <div className=\"left-text\">\r\n                        <span className={statusCircleColor[data.status]}></span ><span>{data.status} - {data.species}</span>\r\n                    </div>\r\n                    {data.type && <div className=\"right-text\" >\r\n                        <span>\r\n                            {data.type} - {data.gender}\r\n                        </span>\r\n                    </div>}\r\n\r\n                </div>\r\n                <div className=\"dimension\">\r\n                    <span>{data.type} {data.dimension}</span>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\nexport default ImageCardComponent;","import { ReactElement } from \"react\";\r\nimport \"../../assets/css/detail/Detail.scss\";\r\nimport * as React from 'react'\r\n\r\ntype Props = {\r\n    data: any\r\n}\r\nconst DetailCard: React.FC<Props> = ({ data }): ReactElement => {\r\n    return (\r\n        <>\r\n            <div className=\"detail-card-main\">\r\n                <div className=\"left-img\">\r\n                    <img src={data.image} alt=\"character\" />\r\n                </div>\r\n                <div className=\"detail-right-content\">\r\n                    <div className=\"name\">\r\n                        <span>{data.name}</span>\r\n                    </div>\r\n                    <div className=\"dimension\">\r\n                        <span>{data.dimension}</span>\r\n                    </div>\r\n                    <div className=\"gender\">\r\n                        <span> {data.type} - {data.gender}</span>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nexport default DetailCard;","import React, { ReactElement } from \"react\";\r\nimport \"../../assets/css/detail/Detail.scss\"\r\nimport DetailCard from \"../../components/detail/Detailcard\";\r\nimport ImageCardComponent from \"../../components/Imagecard\";\r\nimport { ImageCard } from \"../../types/types\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useGetCharacterQuery } from \"../../store/services/locations\";\r\n\r\nconst Detail: React.FC = (): ReactElement => {\r\n    const [searchParams] = useSearchParams()\r\n    const {\r\n        data,\r\n        // isLoading,\r\n        // isSuccess,\r\n        // isError,\r\n        // error,\r\n    } = useGetCharacterQuery(searchParams.get('id'));\r\n    const makeDefaultFormat = (): ImageCard => {\r\n        return {\r\n            id: 0,\r\n            image: '',\r\n            name: '',\r\n            status: '',\r\n            species: '',\r\n            gender: '',\r\n            dimension: '',\r\n            type: '',\r\n            location_url: ''\r\n        }\r\n    }\r\n    return <>\r\n        <div className=\"Detail-main\" >\r\n            <div className=\"detail-left-card\" >\r\n                <ImageCardComponent data={data?.character || makeDefaultFormat()} />\r\n            </div>\r\n\r\n            <div className=\"detail-right-content\">\r\n                <div className=\"heading\">Other Characters</div>\r\n                <div className=\"detail-cards\">\r\n                    {data?.relatedCharacter.map((e: any, i: number) => (<DetailCard data={e} key={e.id + \"-\" + i} />))}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </>;\r\n};\r\n\r\nexport default Detail;\r\n"],"names":["statusCircleColor","Dead","Alive","unknown","_ref","data","navigate","useNavigate","_jsx","_Fragment","children","_jsxs","className","src","image","alt","name","onClick","concat","id","status","species","type","gender","dimension","_useSearchParams","useSearchParams","searchParams","_slicedToArray","useGetCharacterQuery","get","ImageCardComponent","character","location_url","relatedCharacter","map","e","i","DetailCard"],"sourceRoot":""}